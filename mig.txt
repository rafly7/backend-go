// package main

// import (
// 	"log"
// 	"os"
// 	_runtime "runtime/pprof"
// 	"time"

// 	"github.com/rafly7/backend/configs"
// )

// type Post struct {
// 	id          uint32    `gorm:"primary_key;auto_increment" json:"id"`
// 	Description string    `gorm:"type:varchar(255)" json:"description"`
// 	ImageUrl    string    `gorm:"type:varchar(255)" json:"image_url"`
// 	Subtitle    string    `gorm:"type:varchar(100)" json:"subtitle"`
// 	UserId      uint32    `json:"user_id"`
// 	User        User      `json:"user"`
// 	CreatedAt   time.Time `gorm:"default:current_timestamp()" json:"created_at"`
// 	UpdateAt    time.Time `gorm:"default:current_timestamp()" json:"updated_at"`
// }

// type User struct {
// 	id        uint32    `gorm:"primary_key;auto_increment" json:"id"`
// 	Nickname  string    `gorm:"type:varchar(20);not null;unique_index" json:"nickname"`
// 	Email     string    `gorm:"type:varchar(40);not null;unique_index" json:"email"`
// 	Password  string    `gorm:"type:varchar(60);not null" json:"password"`
// 	CreatedAt time.Time `gorm:"default:current_timestamp()" json:"created_at"`
// 	UpdateAt  time.Time `gorm:"default:current_timestamp()" json:"updated_at"`
// 	Posts     []Post    `gorm:"ForeignKey:UserId" json:"posts"`
// }

// var (
// 	cpuProfile = "cpu.prof"
// )

// func main() {
// 	db, err := configs.ConnectToDb()
// 	cpuProf, errc := os.Create(cpuProfile)
// 	if errc != nil {
// 		log.Fatal(errc.Error())
// 	}
// 	defer db.Close()
// 	defer cpuProf.Close()
// 	_runtime.StartCPUProfile(cpuProf)
// 	defer _runtime.StopCPUProfile()
// 	if err != nil {
// 		panic(err.Error())
// 	}
// 	db.DropTableIfExists(&User{}, &Post{})
// 	db.Set("gorm:table_options", "ENGINE=InnoDB").AutoMigrate(
// 		&User{},
// 		&Post{},
// 	)
// 	db.Model(&Post{}).AddForeignKey("user_id", "users(id)", "CASCADE", "CASCADE")
// }
